{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/alcipir/Repos/bitcoin-abc/web/cashtab/mobile/utils/GoogleAnalytics.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactGA from 'react-ga';\nimport { Route } from 'react-router-dom';\n\nvar GoogleAnalytics = function (_Component) {\n  _inherits(GoogleAnalytics, _Component);\n\n  var _super = _createSuper(GoogleAnalytics);\n\n  function GoogleAnalytics() {\n    _classCallCheck(this, GoogleAnalytics);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GoogleAnalytics, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.logPageChange(this.props.location.pathname, this.props.location.search);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var prevLocation = _ref.location;\n      var _this$props$location = this.props.location,\n          pathname = _this$props$location.pathname,\n          search = _this$props$location.search;\n      var isDifferentPathname = pathname !== prevLocation.pathname;\n      var isDifferentSearch = search !== prevLocation.search;\n\n      if (isDifferentPathname || isDifferentSearch) {\n        this.logPageChange(pathname, search);\n      }\n    }\n  }, {\n    key: \"logPageChange\",\n    value: function logPageChange(pathname) {\n      var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var page = pathname + search;\n      var _window = window,\n          location = _window.location;\n      ReactGA.set(_objectSpread({\n        page: page,\n        location: \"\" + location.origin + page\n      }, this.props.options));\n      ReactGA.pageview(page);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return GoogleAnalytics;\n}(Component);\n\nGoogleAnalytics.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n    search: PropTypes.string\n  }).isRequired,\n  options: PropTypes.object\n};\n\nvar RouteTracker = function RouteTracker() {\n  return React.createElement(Route, {\n    component: GoogleAnalytics,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }\n  });\n};\n\nvar init = function init() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isGAEnabled = process.env.NODE_ENV === 'production';\n\n  if (isGAEnabled) {\n    ReactGA.initialize('UA-183678810-1');\n  }\n\n  return isGAEnabled;\n};\n\nexport var Event = function Event(category, action, label) {\n  ReactGA.event({\n    category: category,\n    action: action,\n    label: label\n  });\n};\nexport default {\n  GoogleAnalytics: GoogleAnalytics,\n  RouteTracker: RouteTracker,\n  init: init\n};","map":{"version":3,"sources":["/Users/alcipir/Repos/bitcoin-abc/web/cashtab/mobile/utils/GoogleAnalytics.js"],"names":["React","Component","PropTypes","ReactGA","Route","GoogleAnalytics","logPageChange","props","location","pathname","search","prevLocation","isDifferentPathname","isDifferentSearch","page","window","set","origin","options","pageview","propTypes","shape","string","isRequired","object","RouteTracker","init","isGAEnabled","process","env","NODE_ENV","initialize","Event","category","action","label","event"],"mappings":";;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,UAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;IAEMC,e;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,aAAL,CACI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QADxB,EAEI,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,MAFxB;AAIH;;;6CAE8C;AAAA,UAAhBC,YAAgB,QAA1BH,QAA0B;AAAA,iCAGvC,KAAKD,KAHkC,CAEvCC,QAFuC;AAAA,UAE3BC,QAF2B,wBAE3BA,QAF2B;AAAA,UAEjBC,MAFiB,wBAEjBA,MAFiB;AAI3C,UAAME,mBAAmB,GAAGH,QAAQ,KAAKE,YAAY,CAACF,QAAtD;AACA,UAAMI,iBAAiB,GAAGH,MAAM,KAAKC,YAAY,CAACD,MAAlD;;AAEA,UAAIE,mBAAmB,IAAIC,iBAA3B,EAA8C;AAC1C,aAAKP,aAAL,CAAmBG,QAAnB,EAA6BC,MAA7B;AACH;AACJ;;;kCAEaD,Q,EAAuB;AAAA,UAAbC,MAAa,uEAAJ,EAAI;AACjC,UAAMI,IAAI,GAAGL,QAAQ,GAAGC,MAAxB;AADiC,oBAEZK,MAFY;AAAA,UAEzBP,QAFyB,WAEzBA,QAFyB;AAGjCL,MAAAA,OAAO,CAACa,GAAR;AACIF,QAAAA,IAAI,EAAJA,IADJ;AAEIN,QAAAA,QAAQ,OAAKA,QAAQ,CAACS,MAAd,GAAuBH;AAFnC,SAGO,KAAKP,KAAL,CAAWW,OAHlB;AAKAf,MAAAA,OAAO,CAACgB,QAAR,CAAiBL,IAAjB;AACH;;;6BAEQ;AACL,aAAO,IAAP;AACH;;;;EAjCyBb,S;;AAoC9BI,eAAe,CAACe,SAAhB,GAA4B;AACxBZ,EAAAA,QAAQ,EAAEN,SAAS,CAACmB,KAAV,CAAgB;AACtBZ,IAAAA,QAAQ,EAAEP,SAAS,CAACoB,MADE;AAEtBZ,IAAAA,MAAM,EAAER,SAAS,CAACoB;AAFI,GAAhB,EAGPC,UAJqB;AAKxBL,EAAAA,OAAO,EAAEhB,SAAS,CAACsB;AALK,CAA5B;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEpB,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AAAA,CAArB;;AAEA,IAAMqB,IAAI,GAAG,SAAPA,IAAO,GAAkB;AAAA,MAAjBR,OAAiB,uEAAP,EAAO;AAC3B,MAAMS,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7C;;AAEA,MAAIH,WAAJ,EAAiB;AACbxB,IAAAA,OAAO,CAAC4B,UAAR,CAAmB,gBAAnB;AACH;;AAED,SAAOJ,WAAP;AACH,CARD;;AAUA,OAAO,IAAMK,KAAK,GAAG,SAARA,KAAQ,CAACC,QAAD,EAAWC,MAAX,EAAmBC,KAAnB,EAA6B;AAC9ChC,EAAAA,OAAO,CAACiC,KAAR,CAAc;AACVH,IAAAA,QAAQ,EAAEA,QADA;AAEVC,IAAAA,MAAM,EAAEA,MAFE;AAGVC,IAAAA,KAAK,EAAEA;AAHG,GAAd;AAKH,CANM;AAQP,eAAe;AACX9B,EAAAA,eAAe,EAAfA,eADW;AAEXoB,EAAAA,YAAY,EAAZA,YAFW;AAGXC,EAAAA,IAAI,EAAJA;AAHW,CAAf","sourcesContent":["// utils/GoogleAnalytics.js\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactGA from 'react-ga';\nimport { Route } from 'react-router-dom';\n\nclass GoogleAnalytics extends Component {\n    componentDidMount() {\n        this.logPageChange(\n            this.props.location.pathname,\n            this.props.location.search,\n        );\n    }\n\n    componentDidUpdate({ location: prevLocation }) {\n        const {\n            location: { pathname, search },\n        } = this.props;\n        const isDifferentPathname = pathname !== prevLocation.pathname;\n        const isDifferentSearch = search !== prevLocation.search;\n\n        if (isDifferentPathname || isDifferentSearch) {\n            this.logPageChange(pathname, search);\n        }\n    }\n\n    logPageChange(pathname, search = '') {\n        const page = pathname + search;\n        const { location } = window;\n        ReactGA.set({\n            page,\n            location: `${location.origin}${page}`,\n            ...this.props.options,\n        });\n        ReactGA.pageview(page);\n    }\n\n    render() {\n        return null;\n    }\n}\n\nGoogleAnalytics.propTypes = {\n    location: PropTypes.shape({\n        pathname: PropTypes.string,\n        search: PropTypes.string,\n    }).isRequired,\n    options: PropTypes.object,\n};\n\nconst RouteTracker = () => <Route component={GoogleAnalytics} />;\n\nconst init = (options = {}) => {\n    const isGAEnabled = process.env.NODE_ENV === 'production';\n\n    if (isGAEnabled) {\n        ReactGA.initialize('UA-183678810-1');\n    }\n\n    return isGAEnabled;\n};\n\nexport const Event = (category, action, label) => {\n    ReactGA.event({\n        category: category,\n        action: action,\n        label: label,\n    });\n};\n\nexport default {\n    GoogleAnalytics,\n    RouteTracker,\n    init,\n};\n"]},"metadata":{},"sourceType":"module"}