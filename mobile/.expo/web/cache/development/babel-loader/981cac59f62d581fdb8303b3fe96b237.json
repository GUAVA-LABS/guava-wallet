{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/alcipir/Repos/bitcoin-abc/web/cashtab/mobile/screens/WalletScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { WalletContext } from \"../utils/context\";\nimport { OnBoarding } from \"../components/OnBoarding/OnBoarding\";\nimport { QRCode } from \"../components/Common/QRCode\";\nimport { currency } from \"../components/Common/Ticker.js\";\nimport TokenList from \"../components/Wallet/TokenList\";\nimport { CashLoader } from \"../components/Common/CustomIcons\";\n\nvar WalletInfo = function WalletInfo() {\n  var ContextValue = React.useContext(WalletContext);\n  var wallet = ContextValue.wallet,\n      fiatPrice = ContextValue.fiatPrice,\n      balances = ContextValue.balances,\n      txHistory = ContextValue.txHistory,\n      apiError = ContextValue.apiError;\n\n  var _React$useState = React.useState('cashAddress'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      address = _React$useState2[0],\n      setAddress = _React$useState2[1];\n\n  var hasHistory = txHistory && txHistory[0] && txHistory[0].transactions && txHistory[0].transactions.length > 0 || txHistory && txHistory[1] && txHistory[1].transactions && txHistory[1].transactions.length > 0;\n\n  var handleChangeAddress = function handleChangeAddress() {\n    setAddress(address === 'cashAddress' ? 'slpAddress' : 'cashAddress');\n  };\n\n  return React.createElement(React.Fragment, null, !balances.totalBalance && !apiError && !hasHistory ? React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    role: \"img\",\n    \"aria-label\": \"party emoji\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"\\uD83C\\uDF89\"), \"Congratulations on your new wallet!\", ' ', React.createElement(Text, {\n    role: \"img\",\n    \"aria-label\": \"party emoji\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"\\uD83C\\uDF89\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, ' ', \"Start using the wallet immediately to receive\", ' ', currency.ticker, \" payments, or load it up with\", ' ', currency.ticker, \" to send to others\")), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"0 \", currency.ticker)) : React.createElement(React.Fragment, null, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, balances.totalBalance, \" \", currency.ticker), fiatPrice !== null && !isNaN(balances.totalBalance) && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"$\", (balances.totalBalance * fiatPrice).toFixed(2), ' ', \"USD\")), apiError && React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"An error occured on our end.\"), \"Re-establishing connection...\"), React.createElement(CashLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  })), React.createElement(QRCode, {\n    id: \"borderedQRCode\",\n    address: address === 'slpAddress' ? wallet.Path245.slpAddress : wallet.Path145.cashAddress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar Wallet = function Wallet() {\n  var ContextValue = React.useContext(WalletContext);\n  var wallet = ContextValue.wallet,\n      tokens = ContextValue.tokens,\n      loading = ContextValue.loading;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, !loading && wallet.Path245 && React.createElement(WalletInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 44\n    }\n  }), !loading && wallet.Path245 && tokens && tokens.length > 0 && React.createElement(TokenList, {\n    tokens: tokens,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), !loading && !wallet.Path245 ? React.createElement(OnBoarding, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 44\n    }\n  }) : null);\n};\n\nexport default Wallet;","map":{"version":3,"sources":["/Users/alcipir/Repos/bitcoin-abc/web/cashtab/mobile/screens/WalletScreen.js"],"names":["React","WalletContext","OnBoarding","QRCode","currency","TokenList","CashLoader","WalletInfo","ContextValue","useContext","wallet","fiatPrice","balances","txHistory","apiError","useState","address","setAddress","hasHistory","transactions","length","handleChangeAddress","totalBalance","ticker","isNaN","toFixed","color","Path245","slpAddress","Path145","cashAddress","Wallet","tokens","loading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text } from 'react-native';\nimport { WalletContext } from '../utils/context';\nimport { OnBoarding } from '../components/OnBoarding/OnBoarding';\nimport { QRCode } from '../components/Common/QRCode';\nimport { currency } from '../components/Common/Ticker.js';\nimport TokenList from '../components/Wallet/TokenList';\nimport { CashLoader } from '../components/Common/CustomIcons';\n\nconst WalletInfo = () => {\n    const ContextValue = React.useContext(WalletContext);\n    const { wallet, fiatPrice, balances, txHistory, apiError } = ContextValue;\n    const [address, setAddress] = React.useState('cashAddress');\n\n    const hasHistory =\n        (txHistory &&\n            txHistory[0] &&\n            txHistory[0].transactions &&\n            txHistory[0].transactions.length > 0) ||\n        (txHistory &&\n            txHistory[1] &&\n            txHistory[1].transactions &&\n            txHistory[1].transactions.length > 0);\n\n    const handleChangeAddress = () => {\n        setAddress(address === 'cashAddress' ? 'slpAddress' : 'cashAddress');\n    };\n\n    return (\n        <>\n            {!balances.totalBalance && !apiError && !hasHistory ? (\n                <>\n                    <View>\n                        <Text role=\"img\" aria-label=\"party emoji\">\n                            🎉\n                        </Text>\n                        Congratulations on your new wallet!{' '}\n                        <Text role=\"img\" aria-label=\"party emoji\">\n                            🎉\n                        </Text>\n                        <Text>\n                            {' '}\n                            Start using the wallet immediately to receive{' '}\n                            {currency.ticker} payments, or load it up with{' '}\n                            {currency.ticker} to send to others\n                        </Text>\n                    </View>\n                    <Text>0 {currency.ticker}</Text>\n                </>\n            ) : (\n                <>\n                    <Text>\n                        {balances.totalBalance} {currency.ticker}\n                    </Text>\n                    {fiatPrice !== null && !isNaN(balances.totalBalance) && (\n                        <Text>\n                            ${(balances.totalBalance * fiatPrice).toFixed(2)}{' '}\n                            USD\n                        </Text>\n                    )}\n                </>\n            )}\n            {apiError && (\n                <>\n                    <Text style={{ color: 'red' }}>\n                        <b>An error occured on our end.</b>\n                        Re-establishing connection...\n                    </Text>\n                    <CashLoader />\n                </>\n            )}\n\n            <QRCode\n                id=\"borderedQRCode\"\n                address={\n                    address === 'slpAddress'\n                        ? wallet.Path245.slpAddress\n                        : wallet.Path145.cashAddress\n                }\n            />\n\n            {/* <SwitchBtnCtn>\n                <SwitchBtn\n                    onClick={() => handleChangeAddress()}\n                    className={\n                        address !== 'cashAddress' ? 'nonactiveBtn' : null\n                    }\n                >\n                    {currency.ticker}\n                </SwitchBtn>\n                <SwitchBtn\n                    onClick={() => handleChangeAddress()}\n                    className={\n                        address === 'cashAddress' ? 'nonactiveBtn' : 'slpActive'\n                    }\n                >\n                    {currency.tokenTicker}\n                </SwitchBtn>\n            </SwitchBtnCtn>\n            {balances.totalBalance ? (\n                <>\n                    <ExternalLink\n                        href={`${currency.blockExplorerUrl}/address/${wallet.Path145.cashAddress}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        <LinkOutlined /> View Transactions\n                    </ExternalLink>\n                </>\n            ) : null} */}\n        </>\n    );\n};\n\nconst Wallet = () => {\n    const ContextValue = React.useContext(WalletContext);\n    const { wallet, tokens, loading } = ContextValue;\n\n    return (\n        <View>\n            {!loading && wallet.Path245 && <WalletInfo />}\n            {!loading && wallet.Path245 && tokens && tokens.length > 0 && (\n                <TokenList tokens={tokens} />\n            )}\n            {!loading && !wallet.Path245 ? <OnBoarding /> : null}\n        </View>\n    );\n};\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}