{"ast":null,"code":"export default (function () {});","map":{"version":3,"sources":["/Users/alcipir/Repos/bitcoin-abc/web/cashtab/mobile/components/OnBoarding/OnBoarding.js"],"names":[],"mappings":"AAyIA,gBAAe,YAAM,CAAE,CAAvB","sourcesContent":["// import React, { useState } from 'react';\n// import styled from 'styled-components';\n// import { WalletContext } from '../../utils/context';\n// import { Input, Form, Modal } from 'antd';\n// import {\n//     ExclamationCircleOutlined,\n//     PlusSquareOutlined,\n//     ImportOutlined,\n//     LockOutlined,\n// } from '@ant-design/icons';\n// import StyledOnboarding from '..//Common/StyledOnBoarding';\n// import PrimaryButton, {\n//     SecondaryButton,\n//     SmartButton,\n// } from '../Common/PrimaryButton';\n// import { currency } from '../Common/Ticker.js';\n// import { Event } from '../../utils/GoogleAnalytics';\n\n// export const WelcomeText = styled.p`\n//     color: #444;\n//     width: 100%;\n//     font-size: 16px;\n//     margin-bottom: 60px;\n//     text-align: left;\n// `;\n\n// export const OnBoarding = ({ history }) => {\n//     const ContextValue = React.useContext(WalletContext);\n//     const { createWallet, validateMnemonic } = ContextValue;\n//     const [formData, setFormData] = useState({\n//         dirty: true,\n//         mnemonic: '',\n//     });\n\n//     const [seedInput, openSeedInput] = useState(false);\n//     const [isValidMnemonic, setIsValidMnemonic] = useState(false);\n//     const { confirm } = Modal;\n\n//     async function submit() {\n//         setFormData({\n//             ...formData,\n//             dirty: false,\n//         });\n\n//         if (!formData.mnemonic) {\n//             return;\n//         }\n//         // Event(\"Category\", \"Action\", \"Label\")\n//         // Track number of created wallets from onboarding\n//         Event('Onboarding.js', 'Create Wallet', 'Imported');\n//         createWallet(formData.mnemonic);\n//     }\n\n//     const handleChange = e => {\n//         const { value, name } = e.target;\n\n//         // Validate mnemonic on change\n//         // Import button should be disabled unless mnemonic is valid\n//         setIsValidMnemonic(validateMnemonic(value));\n\n//         setFormData(p => ({ ...p, [name]: value }));\n//     };\n\n//     function showBackupConfirmModal() {\n//         confirm({\n//             title: \"Don't forget to back up your wallet\",\n//             icon: <ExclamationCircleOutlined />,\n//             content: `Once your wallet is created you can back it up by writing down your 12-word seed. You can find your seed on the Settings page. If you are browsing in Incognito mode or if you clear your browser history, you will lose any funds that are not backed up!`,\n//             okText: 'Okay, make me a wallet!',\n//             onOk() {\n//                 // Event(\"Category\", \"Action\", \"Label\")\n//                 // Track number of created wallets from onboarding\n//                 Event('Onboarding.js', 'Create Wallet', 'New');\n//                 createWallet();\n//             },\n//         });\n//     }\n\n//     return (\n//         <>\n//             <WelcomeText>\n//                 Welcome to CashTab! CashTab is an open source, non-custodial web\n//                 wallet for {currency.name}.\n//                 <br />\n//                 <br />\n//                 Web wallets offer user convenience, but storing large amounts of\n//                 money on a web wallet is not recommended.\n//                 <br />\n//                 <br />\n//                 Create a new wallet below to get started, or import an existing\n//                 wallet using a seed phrase.\n//             </WelcomeText>\n\n//             <PrimaryButton onClick={() => showBackupConfirmModal()}>\n//                 <PlusSquareOutlined /> New Wallet\n//             </PrimaryButton>\n\n//             <SecondaryButton onClick={() => openSeedInput(!seedInput)}>\n//                 <ImportOutlined /> Import Wallet\n//             </SecondaryButton>\n//             {seedInput && (\n//                 <StyledOnboarding>\n//                     <Form style={{ width: 'auto' }}>\n//                         <Form.Item\n//                             validateStatus={\n//                                 !formData.dirty && !formData.mnemonic\n//                                     ? 'error'\n//                                     : ''\n//                             }\n//                             help={\n//                                 !formData.mnemonic || !isValidMnemonic\n//                                     ? 'Valid mnemonic seed phrase required'\n//                                     : ''\n//                             }\n//                         >\n//                             <Input\n//                                 prefix={<LockOutlined />}\n//                                 placeholder=\"mnemonic (seed phrase)\"\n//                                 name=\"mnemonic\"\n//                                 onChange={e => handleChange(e)}\n//                                 required\n//                             />\n//                         </Form.Item>\n\n//                         <SmartButton\n//                             disabled={!isValidMnemonic}\n//                             onClick={() => submit()}\n//                         >\n//                             Import\n//                         </SmartButton>\n//                     </Form>\n//                 </StyledOnboarding>\n//             )}\n//         </>\n//     );\n// };\n\nexport default () => {};"]},"metadata":{},"sourceType":"module"}