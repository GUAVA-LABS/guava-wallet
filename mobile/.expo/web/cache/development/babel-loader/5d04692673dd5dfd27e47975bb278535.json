{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/alcipir/Repos/bitcoin-abc/web/cashtab/mobile/node_modules/react-native-pure-button/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\nvar styleType = PropTypes.oneOfType([PropTypes.number, PropTypes.object, PropTypes.array]);\nvar extraTextStyle = null;\n\nif (Platform.OS === 'ios') {\n  extraTextStyle = {\n    fontFamily: 'PingFangSC-Regular'\n  };\n}\n\nvar Button = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          disabled = _this$props.disabled,\n          numberOfLines = _this$props.numberOfLines,\n          style = _this$props.style,\n          textStyle = _this$props.textStyle,\n          activeOpacity = _this$props.activeOpacity,\n          disabledStyle = _this$props.disabledStyle,\n          disabledTextStyle = _this$props.disabledTextStyle,\n          disabledActiveOpacity = _this$props.disabledActiveOpacity;\n\n      if (extraTextStyle) {\n        if (textStyle) {\n          textStyle = [extraTextStyle, textStyle];\n        } else {\n          textStyle = extraTextStyle;\n        }\n      }\n\n      if (disabled) {\n        if (disabledStyle != null) {\n          style = disabledStyle;\n        }\n\n        if (disabledTextStyle != null) {\n          textStyle = disabledTextStyle;\n\n          if (extraTextStyle) {\n            textStyle = [extraTextStyle, textStyle];\n          }\n        }\n\n        if (disabledActiveOpacity != null) {\n          activeOpacity = disabledActiveOpacity;\n        }\n      }\n\n      if (typeof children === 'string' || typeof children === 'number') {\n        children = React.createElement(Text, {\n          style: textStyle,\n          numberOfLines: numberOfLines,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }\n        }, children);\n      } else if (children && children.length > 1) {\n        children = React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }\n        }, children);\n      }\n\n      return React.createElement(TouchableOpacity, _extends({}, this.props, {\n        style: style,\n        activeOpacity: activeOpacity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }), children);\n    }\n  }]);\n\n  return Button;\n}(PureComponent);\n\nButton.defaultProps = {\n  numberOfLines: 1,\n  activeOpacity: 0.6,\n  disabledActiveOpacity: 1\n};\nexport { Button as default };","map":{"version":3,"sources":["/Users/alcipir/Repos/bitcoin-abc/web/cashtab/mobile/node_modules/react-native-pure-button/index.js"],"names":["React","PureComponent","PropTypes","styleType","oneOfType","number","object","array","extraTextStyle","Platform","OS","fontFamily","Button","props","children","disabled","numberOfLines","style","textStyle","activeOpacity","disabledStyle","disabledTextStyle","disabledActiveOpacity","length","flex","defaultProps"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IACEC,aADF,QAEO,OAFP;;;;;AAWA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,SAAS,GAAGD,SAAS,CAACE,SAAV,CAAoB,CACpCF,SAAS,CAACG,MAD0B,EAEpCH,SAAS,CAACI,MAF0B,EAGpCJ,SAAS,CAACK,KAH0B,CAApB,CAAlB;AASA,IAAIC,cAAc,GAAG,IAArB;;AAEA,IAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzBF,EAAAA,cAAc,GAAG;AACfG,IAAAA,UAAU,EAAE;AADG,GAAjB;AAGD;;IAEoBC,M;;;;;;;;;;;;;6BAiBV;AAAA,wBAcH,KAAKC,KAdF;AAAA,UAGLC,QAHK,eAGLA,QAHK;AAAA,UAILC,QAJK,eAILA,QAJK;AAAA,UAKLC,aALK,eAKLA,aALK;AAAA,UAOLC,KAPK,eAOLA,KAPK;AAAA,UAQLC,SARK,eAQLA,SARK;AAAA,UASLC,aATK,eASLA,aATK;AAAA,UAWLC,aAXK,eAWLA,aAXK;AAAA,UAYLC,iBAZK,eAYLA,iBAZK;AAAA,UAaLC,qBAbK,eAaLA,qBAbK;;AAgBP,UAAId,cAAJ,EAAoB;AAClB,YAAIU,SAAJ,EAAe;AACbA,UAAAA,SAAS,GAAG,CACVV,cADU,EAEVU,SAFU,CAAZ;AAID,SALD,MAMK;AACHA,UAAAA,SAAS,GAAGV,cAAZ;AACD;AACF;;AAED,UAAIO,QAAJ,EAAc;AACZ,YAAIK,aAAa,IAAI,IAArB,EAA2B;AACzBH,UAAAA,KAAK,GAAGG,aAAR;AACD;;AACD,YAAIC,iBAAiB,IAAI,IAAzB,EAA+B;AAC7BH,UAAAA,SAAS,GAAGG,iBAAZ;;AACA,cAAIb,cAAJ,EAAoB;AAClBU,YAAAA,SAAS,GAAG,CACVV,cADU,EAEVU,SAFU,CAAZ;AAID;AACF;;AACD,YAAII,qBAAqB,IAAI,IAA7B,EAAmC;AACjCH,UAAAA,aAAa,GAAGG,qBAAhB;AACD;AACF;;AAED,UAAI,OAAOR,QAAP,KAAoB,QAApB,IACC,OAAOA,QAAP,KAAoB,QADzB,EAEE;AACAA,QAAAA,QAAQ,GACN,oBAAC,IAAD;AACE,UAAA,KAAK,EAAEI,SADT;AAEE,UAAA,aAAa,EAAEF,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGF,QAJH,CADF;AAQD,OAXD,MAYK,IAAIA,QAAQ,IAAIA,QAAQ,CAACS,MAAT,GAAkB,CAAlC,EAAqC;AACxCT,QAAAA,QAAQ,GACN,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACU,YAAAA,IAAI,EAAE;AAAP,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGV,QADH,CADF;AAKD;;AAED,aACE,oBAAC,gBAAD,eACM,KAAKD,KADX;AAEE,QAAA,KAAK,EAAEI,KAFT;AAGE,QAAA,aAAa,EAAEE,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKGL,QALH,CADF;AASD;;;;EA5FiCb,a;;AAAfW,M,CAWZa,Y,GAAe;AACpBT,EAAAA,aAAa,EAAE,CADK;AAEpBG,EAAAA,aAAa,EAAE,GAFK;AAGpBG,EAAAA,qBAAqB,EAAE;AAHH,C;SAXHV,M","sourcesContent":["'use strict'\n\nimport React, {\n  PureComponent,\n} from 'react'\n\nimport {\n  View,\n  Text,\n  Platform,\n  TouchableOpacity,\n} from 'react-native'\n\nimport PropTypes from 'prop-types'\n\nconst styleType = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.object,\n  PropTypes.array,\n])\n\n// let textPropTypes = Text.propTypes\n// let touchablePropTypes = TouchableOpacity.propTypes\n\nlet extraTextStyle = null\n\nif (Platform.OS === 'ios') {\n  extraTextStyle = {\n    fontFamily: 'PingFangSC-Regular'\n  }\n}\n\nexport default class Button extends PureComponent {\n\n  // static propTypes = {\n  //   ...touchablePropTypes,\n  //   disabledActiveOpacity: touchablePropTypes.activeOpacity,\n  //   disabledStyle: styleType,\n  //   disabledTextStyle: styleType,\n  //   textStyle: styleType,\n  //   numberOfLines: textPropTypes.numberOfLines,\n  // }\n\n  static defaultProps = {\n    numberOfLines: 1,\n    activeOpacity: 0.6,\n    disabledActiveOpacity: 1,\n  }\n\n  render() {\n\n    let {\n      children,\n      disabled,\n      numberOfLines,\n\n      style,\n      textStyle,\n      activeOpacity,\n\n      disabledStyle,\n      disabledTextStyle,\n      disabledActiveOpacity,\n    } = this.props\n\n    if (extraTextStyle) {\n      if (textStyle) {\n        textStyle = [\n          extraTextStyle,\n          textStyle\n        ]\n      }\n      else {\n        textStyle = extraTextStyle\n      }\n    }\n\n    if (disabled) {\n      if (disabledStyle != null) {\n        style = disabledStyle\n      }\n      if (disabledTextStyle != null) {\n        textStyle = disabledTextStyle\n        if (extraTextStyle) {\n          textStyle = [\n            extraTextStyle,\n            textStyle\n          ]\n        }\n      }\n      if (disabledActiveOpacity != null) {\n        activeOpacity = disabledActiveOpacity\n      }\n    }\n\n    if (typeof children === 'string'\n      || typeof children === 'number'\n    ) {\n      children = (\n        <Text\n          style={textStyle}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      )\n    }\n    else if (children && children.length > 1) {\n      children = (\n        <View style={{flex: 1}}>\n          {children}\n        </View>\n      )\n    }\n\n    return (\n      <TouchableOpacity\n        {...this.props}\n        style={style}\n        activeOpacity={activeOpacity}\n      >\n        {children}\n      </TouchableOpacity>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}